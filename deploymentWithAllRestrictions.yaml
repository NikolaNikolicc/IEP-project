version: '3'

networks:
  authentication_network:
  store_network:

services:
  adminer:
    image: adminer
    ports:
      - 8080:8080

  authenticationDatabase:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    volumes:
      - authentication_data:/var/lib/mysql
    networks:
      - authentication_network

  storeDatabase:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    volumes:
      - store_data:/var/lib/mysql
    networks:
      - store_network

  authenticationDatabaseMigration:
    image: authenticationdatabasemigration
    environment:
      - DATABASE_URL=authenticationDatabase
    depends_on:
      authenticationDatabase:
        condition: service_healthy
    networks:
      - authentication_network

  storeDatabaseMigration:
    image: storedatabasemigration
    environment:
      - DATABASE_URL=storeDatabase
    depends_on:
      storeDatabase:
        condition: service_healthy
    networks:
      - store_network

  authentication:
    image: authentication
    environment:
      - DATABASE_URL=authenticationDatabase
    depends_on:
      authenticationDatabaseMigration:
        condition: service_completed_successfully
    ports:
      - 5000:5000
    networks:
      - authentication_network

  storeOwner:
    image: storeowner
    environment:
      - DATABASE_URL=storeDatabase
    depends_on:
      storeDatabaseMigration:
        condition: service_completed_successfully
    ports:
      - 5001:5001
    networks:
      - store_network

  storeCustomer:
    image: storecustomer
    environment:
      - DATABASE_URL=storeDatabase
    depends_on:
      storeDatabaseMigration:
        condition: service_completed_successfully
    ports:
      - 5002:5002
    networks:
      - store_network

  storeCourier:
    image: storecourier
    environment:
      - DATABASE_URL=storeDatabase
    depends_on:
      storeDatabaseMigration:
        condition: service_completed_successfully
    ports:
      - 5003:5003
    networks:
      - store_network

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "8081:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      - store_network

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - store_network

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8083:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - store_network

  sparkApp:
    image: spark
    ports:
      - 5004:5004
    networks:
      - store_network
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - storeDatabaseMigration
    environment:
      - ENABLE_INIT_DAEMON=False
      - DATABASE_URL=storeDatabase

  ganache:
    image: trufflesuite/ganache-cli
    ports:
      - "8545:8545"
    networks:
      - store_network

volumes:
  authentication_data:
  store_data:
